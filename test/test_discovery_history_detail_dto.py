# coding: utf-8

"""
    CZERTAINLY Core API

    REST API for CZERTAINLY Core

    The version of the OpenAPI document: 2.13.2-SNAPSHOT
    Contact: info@czertainly.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.discovery_history_detail_dto import DiscoveryHistoryDetailDto

class TestDiscoveryHistoryDetailDto(unittest.TestCase):
    """DiscoveryHistoryDetailDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DiscoveryHistoryDetailDto:
        """Test DiscoveryHistoryDetailDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DiscoveryHistoryDetailDto`
        """
        model = DiscoveryHistoryDetailDto()
        if include_optional:
            return DiscoveryHistoryDetailDto(
                uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002',
                name = 'Name',
                kind = 'IP-HostName',
                status = 'inProgress',
                connector_status = 'inProgress',
                message = 'Failed due to network connectivity issues',
                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                total_certificates_discovered = 56,
                connector_total_certificates_discovered = 56,
                connector_uuid = '',
                connector_name = '',
                attributes = [
                    openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                        uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                        name = 'Attribute', 
                        label = 'Attribute Name', 
                        type = 'data', 
                        content_type = 'string', 
                        content = [
                            openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                reference = '', 
                                data = openapi_client.models.data.data(), )
                            ], )
                    ],
                custom_attributes = [
                    openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                        uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                        name = 'Attribute', 
                        label = 'Attribute Name', 
                        type = 'data', 
                        content_type = 'string', 
                        content = [
                            openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                reference = '', 
                                data = openapi_client.models.data.data(), )
                            ], )
                    ],
                metadata = [
                    openapi_client.models.metadata_response_dto.MetadataResponseDto(
                        connector_uuid = '', 
                        connector_name = '', 
                        source_object_type = 'NONE', 
                        items = [
                            openapi_client.models.response_metadata_dto.ResponseMetadataDto(
                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                name = 'Attribute', 
                                label = 'Attribute Name', 
                                type = 'data', 
                                content_type = 'string', 
                                content = [
                                    openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                        reference = '', 
                                        data = openapi_client.models.data.data(), )
                                    ], 
                                source_objects = [
                                    openapi_client.models.name_and_uuid_dto.NameAndUuidDto(
                                        uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                                        name = 'Name', )
                                    ], )
                            ], )
                    ],
                triggers = [
                    openapi_client.models.trigger_dto.TriggerDto(
                        uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                        name = 'Name', 
                        description = '', 
                        type = 'event', 
                        resource = 'NONE', 
                        ignore_trigger = True, 
                        event = 'discoveryFinished', 
                        event_resource = 'NONE', )
                    ]
            )
        else:
            return DiscoveryHistoryDetailDto(
                uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002',
                name = 'Name',
                kind = 'IP-HostName',
                status = 'inProgress',
                connector_status = 'inProgress',
                connector_uuid = '',
                connector_name = '',
                attributes = [
                    openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                        uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                        name = 'Attribute', 
                        label = 'Attribute Name', 
                        type = 'data', 
                        content_type = 'string', 
                        content = [
                            openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                reference = '', 
                                data = openapi_client.models.data.data(), )
                            ], )
                    ],
                triggers = [
                    openapi_client.models.trigger_dto.TriggerDto(
                        uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                        name = 'Name', 
                        description = '', 
                        type = 'event', 
                        resource = 'NONE', 
                        ignore_trigger = True, 
                        event = 'discoveryFinished', 
                        event_resource = 'NONE', )
                    ],
        )
        """

    def testDiscoveryHistoryDetailDto(self):
        """Test DiscoveryHistoryDetailDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
