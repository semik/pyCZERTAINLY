# coding: utf-8

"""
    CZERTAINLY Core API

    REST API for CZERTAINLY Core

    The version of the OpenAPI document: 2.13.2-SNAPSHOT
    Contact: info@czertainly.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.key_item_dto import KeyItemDto

class TestKeyItemDto(unittest.TestCase):
    """KeyItemDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> KeyItemDto:
        """Test KeyItemDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `KeyItemDto`
        """
        model = KeyItemDto()
        if include_optional:
            return KeyItemDto(
                uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002',
                name = 'Name',
                description = '',
                creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                key_wrapper_uuid = '',
                token_profile_uuid = '',
                token_profile_name = '',
                token_instance_uuid = '',
                token_instance_name = '',
                owner = '',
                owner_uuid = '',
                groups = [
                    openapi_client.models.group_dto.GroupDto(
                        uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                        name = 'Name', 
                        description = '', 
                        email = '', 
                        custom_attributes = [
                            openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                name = 'Attribute', 
                                label = 'Attribute Name', 
                                type = 'data', 
                                content_type = 'string', 
                                content = [
                                    openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                        reference = '', 
                                        data = openapi_client.models.data.data(), )
                                    ], )
                            ], )
                    ],
                associations = 56,
                key_reference_uuid = '',
                type = 'Secret',
                key_algorithm = 'RSA',
                format = 'Raw',
                length = 56,
                usage = [
                    'sign'
                    ],
                enabled = True,
                state = 'pre-active'
            )
        else:
            return KeyItemDto(
                uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002',
                name = 'Name',
                description = '',
                creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                key_wrapper_uuid = '',
                token_instance_uuid = '',
                token_instance_name = '',
                key_reference_uuid = '',
                type = 'Secret',
                key_algorithm = 'RSA',
                usage = [
                    'sign'
                    ],
                enabled = True,
                state = 'pre-active',
        )
        """

    def testKeyItemDto(self):
        """Test KeyItemDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
