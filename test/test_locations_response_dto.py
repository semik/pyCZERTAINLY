# coding: utf-8

"""
    CZERTAINLY Core API

    REST API for CZERTAINLY Core

    The version of the OpenAPI document: 2.13.2-SNAPSHOT
    Contact: info@czertainly.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.locations_response_dto import LocationsResponseDto

class TestLocationsResponseDto(unittest.TestCase):
    """LocationsResponseDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LocationsResponseDto:
        """Test LocationsResponseDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LocationsResponseDto`
        """
        model = LocationsResponseDto()
        if include_optional:
            return LocationsResponseDto(
                locations = [
                    openapi_client.models.location_dto.LocationDto(
                        uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                        name = 'Name', 
                        description = '', 
                        entity_instance_uuid = '', 
                        entity_instance_name = '', 
                        attributes = [
                            openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                name = 'Attribute', 
                                label = 'Attribute Name', 
                                type = 'data', 
                                content_type = 'string', 
                                content = [
                                    openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                        reference = '', 
                                        data = openapi_client.models.data.data(), )
                                    ], )
                            ], 
                        custom_attributes = [
                            openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                name = 'Attribute', 
                                label = 'Attribute Name', 
                                type = 'data', 
                                content_type = 'string', )
                            ], 
                        enabled = True, 
                        support_multiple_entries = True, 
                        support_key_management = True, 
                        certificates = [
                            openapi_client.models.certificate_in_location_dto.CertificateInLocationDto(
                                certificate_uuid = '', 
                                state = 'requested', 
                                validation_status = 'not_checked', 
                                common_name = '', 
                                serial_number = '', 
                                metadata = [
                                    openapi_client.models.metadata_response_dto.MetadataResponseDto(
                                        connector_uuid = '', 
                                        connector_name = '', 
                                        source_object_type = 'NONE', 
                                        items = [
                                            openapi_client.models.response_metadata_dto.ResponseMetadataDto(
                                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                                name = 'Attribute', 
                                                label = 'Attribute Name', 
                                                type = , 
                                                content_type = , 
                                                source_objects = [
                                                    openapi_client.models.name_and_uuid_dto.NameAndUuidDto(
                                                        uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                                                        name = 'Name', )
                                                    ], )
                                            ], )
                                    ], 
                                push_attributes = [
                                    
                                    ], 
                                csr_attributes = [
                                    
                                    ], 
                                with_key = True, )
                            ], 
                        metadata = [
                            openapi_client.models.metadata_response_dto.MetadataResponseDto(
                                connector_uuid = '', 
                                connector_name = '', 
                                items = [
                                    openapi_client.models.response_metadata_dto.ResponseMetadataDto(
                                        uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                        name = 'Attribute', 
                                        label = 'Attribute Name', 
                                        type = , 
                                        content_type = , 
                                        source_objects = [
                                            openapi_client.models.name_and_uuid_dto.NameAndUuidDto(
                                                uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                                                name = 'Name', )
                                            ], )
                                    ], )
                            ], )
                    ],
                items_per_page = 56,
                page_number = 56,
                total_pages = 56,
                total_items = 56
            )
        else:
            return LocationsResponseDto(
                locations = [
                    openapi_client.models.location_dto.LocationDto(
                        uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                        name = 'Name', 
                        description = '', 
                        entity_instance_uuid = '', 
                        entity_instance_name = '', 
                        attributes = [
                            openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                name = 'Attribute', 
                                label = 'Attribute Name', 
                                type = 'data', 
                                content_type = 'string', 
                                content = [
                                    openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                        reference = '', 
                                        data = openapi_client.models.data.data(), )
                                    ], )
                            ], 
                        custom_attributes = [
                            openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                name = 'Attribute', 
                                label = 'Attribute Name', 
                                type = 'data', 
                                content_type = 'string', )
                            ], 
                        enabled = True, 
                        support_multiple_entries = True, 
                        support_key_management = True, 
                        certificates = [
                            openapi_client.models.certificate_in_location_dto.CertificateInLocationDto(
                                certificate_uuid = '', 
                                state = 'requested', 
                                validation_status = 'not_checked', 
                                common_name = '', 
                                serial_number = '', 
                                metadata = [
                                    openapi_client.models.metadata_response_dto.MetadataResponseDto(
                                        connector_uuid = '', 
                                        connector_name = '', 
                                        source_object_type = 'NONE', 
                                        items = [
                                            openapi_client.models.response_metadata_dto.ResponseMetadataDto(
                                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                                name = 'Attribute', 
                                                label = 'Attribute Name', 
                                                type = , 
                                                content_type = , 
                                                source_objects = [
                                                    openapi_client.models.name_and_uuid_dto.NameAndUuidDto(
                                                        uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                                                        name = 'Name', )
                                                    ], )
                                            ], )
                                    ], 
                                push_attributes = [
                                    
                                    ], 
                                csr_attributes = [
                                    
                                    ], 
                                with_key = True, )
                            ], 
                        metadata = [
                            openapi_client.models.metadata_response_dto.MetadataResponseDto(
                                connector_uuid = '', 
                                connector_name = '', 
                                items = [
                                    openapi_client.models.response_metadata_dto.ResponseMetadataDto(
                                        uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                        name = 'Attribute', 
                                        label = 'Attribute Name', 
                                        type = , 
                                        content_type = , 
                                        source_objects = [
                                            openapi_client.models.name_and_uuid_dto.NameAndUuidDto(
                                                uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                                                name = 'Name', )
                                            ], )
                                    ], )
                            ], )
                    ],
                items_per_page = 56,
                page_number = 56,
                total_pages = 56,
                total_items = 56,
        )
        """

    def testLocationsResponseDto(self):
        """Test LocationsResponseDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
