# coding: utf-8

"""
    CZERTAINLY Core API

    REST API for CZERTAINLY Core

    The version of the OpenAPI document: 2.13.2-SNAPSHOT
    Contact: info@czertainly.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.certificate_detail_dto import CertificateDetailDto

class TestCertificateDetailDto(unittest.TestCase):
    """CertificateDetailDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CertificateDetailDto:
        """Test CertificateDetailDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CertificateDetailDto`
        """
        model = CertificateDetailDto()
        if include_optional:
            return CertificateDetailDto(
                uuid = '',
                common_name = '',
                serial_number = '',
                issuer_common_name = '',
                issuer_dn = '',
                subject_dn = '',
                not_before = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                not_after = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                public_key_algorithm = '',
                signature_algorithm = '',
                key_size = 56,
                state = 'requested',
                validation_status = 'not_checked',
                ra_profile = openapi_client.models.simplified_ra_profile_dto.SimplifiedRaProfileDto(
                    uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                    name = 'Name', 
                    enabled = True, 
                    authority_instance_uuid = '', ),
                fingerprint = '',
                groups = [
                    openapi_client.models.group_dto.GroupDto(
                        uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                        name = 'Name', 
                        description = '', 
                        email = '', 
                        custom_attributes = [
                            openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                name = 'Attribute', 
                                label = 'Attribute Name', 
                                type = 'data', 
                                content_type = 'string', 
                                content = [
                                    openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                        reference = '', 
                                        data = openapi_client.models.data.data(), )
                                    ], )
                            ], )
                    ],
                owner = '',
                owner_uuid = '',
                certificate_type = 'X.509',
                issuer_serial_number = '',
                compliance_status = 'not_checked',
                issuer_certificate_uuid = '',
                private_key_availability = True,
                trusted_ca = True,
                extended_key_usage = [
                    ''
                    ],
                key_usage = [
                    ''
                    ],
                subject_type = 'endEntity',
                metadata = [
                    openapi_client.models.metadata_response_dto.MetadataResponseDto(
                        connector_uuid = '', 
                        connector_name = '', 
                        source_object_type = 'NONE', 
                        items = [
                            openapi_client.models.response_metadata_dto.ResponseMetadataDto(
                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                name = 'Attribute', 
                                label = 'Attribute Name', 
                                type = 'data', 
                                content_type = 'string', 
                                content = [
                                    openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                        reference = '', 
                                        data = openapi_client.models.data.data(), )
                                    ], 
                                source_objects = [
                                    openapi_client.models.name_and_uuid_dto.NameAndUuidDto(
                                        uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                                        name = 'Name', )
                                    ], )
                            ], )
                    ],
                certificate_content = '',
                subject_alternative_names = {
                    'key' : None
                    },
                locations = [
                    openapi_client.models.location_dto.LocationDto(
                        uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                        name = 'Name', 
                        description = '', 
                        entity_instance_uuid = '', 
                        entity_instance_name = '', 
                        attributes = [
                            openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                name = 'Attribute', 
                                label = 'Attribute Name', 
                                type = 'data', 
                                content_type = 'string', 
                                content = [
                                    openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                        reference = '', 
                                        data = openapi_client.models.data.data(), )
                                    ], )
                            ], 
                        custom_attributes = [
                            openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                name = 'Attribute', 
                                label = 'Attribute Name', 
                                type = 'data', 
                                content_type = 'string', )
                            ], 
                        enabled = True, 
                        support_multiple_entries = True, 
                        support_key_management = True, 
                        certificates = [
                            openapi_client.models.certificate_in_location_dto.CertificateInLocationDto(
                                certificate_uuid = '', 
                                state = 'requested', 
                                validation_status = 'not_checked', 
                                common_name = '', 
                                serial_number = '', 
                                metadata = [
                                    openapi_client.models.metadata_response_dto.MetadataResponseDto(
                                        connector_uuid = '', 
                                        connector_name = '', 
                                        source_object_type = 'NONE', 
                                        items = [
                                            openapi_client.models.response_metadata_dto.ResponseMetadataDto(
                                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                                name = 'Attribute', 
                                                label = 'Attribute Name', 
                                                type = , 
                                                content_type = , 
                                                source_objects = [
                                                    openapi_client.models.name_and_uuid_dto.NameAndUuidDto(
                                                        uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                                                        name = 'Name', )
                                                    ], )
                                            ], )
                                    ], 
                                push_attributes = [
                                    
                                    ], 
                                csr_attributes = [
                                    
                                    ], 
                                with_key = True, )
                            ], 
                        metadata = [
                            openapi_client.models.metadata_response_dto.MetadataResponseDto(
                                connector_uuid = '', 
                                connector_name = '', 
                                items = [
                                    openapi_client.models.response_metadata_dto.ResponseMetadataDto(
                                        uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                        name = 'Attribute', 
                                        label = 'Attribute Name', 
                                        type = , 
                                        content_type = , 
                                        source_objects = [
                                            openapi_client.models.name_and_uuid_dto.NameAndUuidDto(
                                                uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                                                name = 'Name', )
                                            ], )
                                    ], )
                            ], )
                    ],
                non_compliant_rules = [
                    openapi_client.models.certificate_compliance_result_dto.CertificateComplianceResultDto(
                        connector_name = 'Provider1', 
                        rule_name = 'RuleName', 
                        rule_description = 'Description sample', 
                        status = 'nok', 
                        attributes = [
                            openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                                uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                name = 'Attribute', 
                                label = 'Attribute Name', 
                                type = 'data', 
                                content_type = 'string', 
                                content = [
                                    openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                        reference = '', 
                                        data = openapi_client.models.data.data(), )
                                    ], )
                            ], )
                    ],
                custom_attributes = [
                    openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                        uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                        name = 'Attribute', 
                        label = 'Attribute Name', 
                        type = 'data', 
                        content_type = 'string', 
                        content = [
                            openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                reference = '', 
                                data = openapi_client.models.data.data(), )
                            ], )
                    ],
                key = openapi_client.models.key_dto.KeyDto(
                    uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                    name = 'Name', 
                    description = '', 
                    creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    token_profile_uuid = '', 
                    token_profile_name = '', 
                    token_instance_uuid = '', 
                    token_instance_name = '', 
                    owner = '', 
                    owner_uuid = '', 
                    groups = [
                        openapi_client.models.group_dto.GroupDto(
                            uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                            name = 'Name', 
                            description = '', 
                            email = '', 
                            custom_attributes = [
                                openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                                    uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                    name = 'Attribute', 
                                    label = 'Attribute Name', 
                                    type = 'data', 
                                    content_type = 'string', 
                                    content = [
                                        openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                            reference = '', 
                                            data = openapi_client.models.data.data(), )
                                        ], )
                                ], )
                        ], 
                    items = [
                        openapi_client.models.key_item_dto.KeyItemDto(
                            uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                            name = 'Name', 
                            description = '', 
                            creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            key_wrapper_uuid = '', 
                            token_profile_uuid = '', 
                            token_profile_name = '', 
                            token_instance_uuid = '', 
                            token_instance_name = '', 
                            owner = '', 
                            owner_uuid = '', 
                            associations = 56, 
                            key_reference_uuid = '', 
                            type = 'Secret', 
                            key_algorithm = 'RSA', 
                            format = 'Raw', 
                            length = 56, 
                            usage = [
                                'sign'
                                ], 
                            enabled = True, 
                            state = 'pre-active', )
                        ], 
                    associations = 56, ),
                certificate_request = openapi_client.models.certificate_request_dto.CertificateRequestDto(
                    certificate_type = 'X.509', 
                    certificate_request_format = 'pkcs10', 
                    public_key_algorithm = '', 
                    signature_algorithm = '', 
                    content = '', 
                    common_name = '', 
                    subject_dn = '', 
                    subject_alternative_names = {
                        'key' : None
                        }, 
                    attributes = [
                        openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                            uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                            name = 'Attribute', 
                            label = 'Attribute Name', 
                            type = 'data', 
                            content_type = 'string', 
                            content = [
                                openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                    reference = '', 
                                    data = openapi_client.models.data.data(), )
                                ], )
                        ], 
                    signature_attributes = [
                        openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                            uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                            name = 'Attribute', 
                            label = 'Attribute Name', 
                            type = 'data', 
                            content_type = 'string', )
                        ], ),
                source_certificate_uuid = '',
                issue_attributes = [
                    openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                        uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                        name = 'Attribute', 
                        label = 'Attribute Name', 
                        type = 'data', 
                        content_type = 'string', 
                        content = [
                            openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                reference = '', 
                                data = openapi_client.models.data.data(), )
                            ], )
                    ],
                revoke_attributes = [
                    openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                        uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                        name = 'Attribute', 
                        label = 'Attribute Name', 
                        type = 'data', 
                        content_type = 'string', 
                        content = [
                            openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                reference = '', 
                                data = openapi_client.models.data.data(), )
                            ], )
                    ],
                related_certificates = [
                    openapi_client.models.certificate_dto.CertificateDto(
                        uuid = '', 
                        common_name = '', 
                        serial_number = '', 
                        issuer_common_name = '', 
                        issuer_dn = '', 
                        subject_dn = '', 
                        not_before = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        not_after = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        public_key_algorithm = '', 
                        signature_algorithm = '', 
                        key_size = 56, 
                        state = 'requested', 
                        validation_status = 'not_checked', 
                        ra_profile = openapi_client.models.simplified_ra_profile_dto.SimplifiedRaProfileDto(
                            uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                            name = 'Name', 
                            enabled = True, 
                            authority_instance_uuid = '', ), 
                        fingerprint = '', 
                        groups = [
                            openapi_client.models.group_dto.GroupDto(
                                uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                                name = 'Name', 
                                description = '', 
                                email = '', 
                                custom_attributes = [
                                    openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                                        uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                                        name = 'Attribute', 
                                        label = 'Attribute Name', 
                                        type = 'data', 
                                        content_type = 'string', 
                                        content = [
                                            openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                                reference = '', 
                                                data = openapi_client.models.data.data(), )
                                            ], )
                                    ], )
                            ], 
                        owner = '', 
                        owner_uuid = '', 
                        certificate_type = 'X.509', 
                        issuer_serial_number = '', 
                        compliance_status = 'not_checked', 
                        issuer_certificate_uuid = '', 
                        private_key_availability = True, 
                        trusted_ca = True, )
                    ],
                protocol_info = openapi_client.models.certificate_protocol_dto.CertificateProtocolDto(
                    protocol = 'acme', 
                    protocol_profile_uuid = '', 
                    additional_protocol_uuid = '', )
            )
        else:
            return CertificateDetailDto(
                uuid = '',
                common_name = '',
                subject_dn = '',
                public_key_algorithm = '',
                signature_algorithm = '',
                key_size = 56,
                state = 'requested',
                validation_status = 'not_checked',
                private_key_availability = True,
                trusted_ca = True,
                key_usage = [
                    ''
                    ],
                subject_type = 'endEntity',
                certificate_content = '',
        )
        """

    def testCertificateDetailDto(self):
        """Test CertificateDetailDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
