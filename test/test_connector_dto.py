# coding: utf-8

"""
    CZERTAINLY Core API

    REST API for CZERTAINLY Core

    The version of the OpenAPI document: 2.13.2-SNAPSHOT
    Contact: info@czertainly.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.connector_dto import ConnectorDto

class TestConnectorDto(unittest.TestCase):
    """ConnectorDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConnectorDto:
        """Test ConnectorDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConnectorDto`
        """
        model = ConnectorDto()
        if include_optional:
            return ConnectorDto(
                uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002',
                name = 'Name',
                function_groups = [
                    openapi_client.models.function_group_dto.FunctionGroupDto(
                        function_group_code = 'credentialProvider', 
                        kinds = ["SoftKeyStore","Basic","ApiKey"], 
                        end_points = [
                            openapi_client.models.endpoint_dto.EndpointDto(
                                uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                                name = 'Name', 
                                context = '/v1', 
                                method = 'POST', 
                                required = True, )
                            ], 
                        uuid = '204a57f6-2ed3-45b6-bf09-af8b8c900e33', 
                        name = '', )
                    ],
                url = 'http://network-discovery-provider:8080',
                auth_type = 'none',
                auth_attributes = [
                    openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                        uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                        name = 'Attribute', 
                        label = 'Attribute Name', 
                        type = 'data', 
                        content_type = 'string', 
                        content = [
                            openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                reference = '', 
                                data = openapi_client.models.data.data(), )
                            ], )
                    ],
                status = 'CONNECTED',
                custom_attributes = [
                    openapi_client.models.response_attribute_dto.ResponseAttributeDto(
                        uuid = '166b5cf52-63f2-11ec-90d6-0242ac120003', 
                        name = 'Attribute', 
                        label = 'Attribute Name', 
                        type = 'data', 
                        content_type = 'string', 
                        content = [
                            openapi_client.models.base_attribute_content_dto.BaseAttributeContentDto(
                                reference = '', 
                                data = openapi_client.models.data.data(), )
                            ], )
                    ]
            )
        else:
            return ConnectorDto(
                uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002',
                name = 'Name',
                function_groups = [
                    openapi_client.models.function_group_dto.FunctionGroupDto(
                        function_group_code = 'credentialProvider', 
                        kinds = ["SoftKeyStore","Basic","ApiKey"], 
                        end_points = [
                            openapi_client.models.endpoint_dto.EndpointDto(
                                uuid = '7b55ge1c-844f-11dc-a8a3-0242ac120002', 
                                name = 'Name', 
                                context = '/v1', 
                                method = 'POST', 
                                required = True, )
                            ], 
                        uuid = '204a57f6-2ed3-45b6-bf09-af8b8c900e33', 
                        name = '', )
                    ],
                url = 'http://network-discovery-provider:8080',
                auth_type = 'none',
                status = 'CONNECTED',
        )
        """

    def testConnectorDto(self):
        """Test ConnectorDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
