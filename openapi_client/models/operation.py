# coding: utf-8

"""
    CZERTAINLY Core API

    REST API for CZERTAINLY Core

    The version of the OpenAPI document: 2.13.2-SNAPSHOT
    Contact: info@czertainly.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class Operation(str, Enum):
    """
    Resource operation that is being logged
    """

    """
    allowed enum values
    """
    UNKNOWN = 'unknown'
    LIST = 'list'
    DETAIL = 'detail'
    CREATE = 'create'
    UPDATE = 'update'
    DELETE = 'delete'
    FORCEDELETE = 'forceDelete'
    ADD = 'add'
    REMOVE = 'remove'
    REQUEST = 'request'
    REGISTER = 'register'
    ENABLE = 'enable'
    DISABLE = 'disable'
    ACTIVATE = 'activate'
    DEACTIVATE = 'deactivate'
    LISTASSOCIATIONS = 'listAssociations'
    ASSOCIATE = 'associate'
    DISASSOCIATE = 'disassociate'
    HISTORY = 'history'
    SUMMARY = 'summary'
    CHECKCOMPLIANCE = 'checkCompliance'
    CHECKVALIDATION = 'checkValidation'
    ISSUE = 'issue'
    RENEW = 'renew'
    REKEY = 'rekey'
    REVOKE = 'revoke'
    EXPORT = 'export'
    GETSTATUS = 'getStatus'
    GETCONTENT = 'getContent'
    GETCHAIN = 'getChain'
    DOWNLOAD = 'download'
    DOWNLOADCHAIN = 'downloadChain'
    GETPROTOCOLINFO = 'getProtocolInfo'
    LISTPROTOCOLCERTIFICATES = 'listProtocolCertificates'
    UPDATEPROTOCOLISSUEPROFILE = 'updateProtocolIssueProfile'
    ACTIVATEPROTOCOL = 'activateProtocol'
    DEACTIVATEPROTOCOL = 'deactivateProtocol'
    ACMEDIRECTORY = 'acmeDirectory'
    ACMENONCE = 'acmeNonce'
    ACMEKEYROLLOVER = 'acmeKeyRollover'
    ACMEVALIDATE = 'acmeValidate'
    ACMEFINALIZE = 'acmeFinalize'
    SCEPCACAPABILITIES = 'scepCaCapabilities'
    SCEPCERTIFICATEPOLL = 'scepCertificatePoll'
    SCEPTRANSACTIONCHECK = 'scepTransactionCheck'
    CMPCONFIRM = 'cmpConfirm'
    UPLOAD = 'upload'
    SYNC = 'sync'
    COMPROMISE = 'compromise'
    DESTROY = 'destroy'
    UPDATEKEYUSAGE = 'updateKeyUsage'
    ENCRYPT = 'encrypt'
    DECRYPT = 'decrypt'
    SIGN = 'sign'
    VERIFY = 'verify'
    RANDOMDATA = 'randomData'
    PUSHTOLOCATION = 'pushToLocation'
    REMOVEFROMLOCATION = 'removeFromLocation'
    ISSUEINLOCATION = 'issueInLocation'
    RENEWINLOCATION = 'renewInLocation'
    CONNECT = 'connect'
    RECONNECT = 'reconnect'
    CHECKHEALTH = 'checkHealth'
    STATISTICS = 'statistics'
    APPROVE = 'approve'
    APPROVEOVERRIDE = 'approveOverride'
    REJECT = 'reject'
    REJECTOVERRIDE = 'rejectOverride'
    PROFILE = 'profile'
    PROFILEUPDATE = 'profileUpdate'
    IDENTIFY = 'identify'
    MARKASREAD = 'markAsRead'
    GETPERMISSIONS = 'getPermissions'
    GETOBJECTPERMISSIONS = 'getObjectPermissions'
    UPDATEPERMISSIONS = 'updatePermissions'
    UPDATEOBJECTPERMISSIONS = 'updateObjectPermissions'
    SCHEDULE = 'schedule'
    LISTATTRIBUTES = 'listAttributes'
    VALIDATEATTRIBUTES = 'validateAttributes'
    ATTRIBUTECALLBACK = 'attributeCallback'
    UPDATEATTRIBUTERESOURCES = 'updateAttributeResources'
    UPDATEATTRIBUTECONTENT = 'updateAttributeContent'
    DELETEATTRIBUTECONTENT = 'deleteAttributeContent'
    PROMOTEMETADATA = 'promoteMetadata'
    LISTCERTIFICATEPROFILES = 'listCertificateProfiles'
    LISTCAS = 'listCas'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of Operation from a JSON string"""
        return cls(json.loads(json_str))


