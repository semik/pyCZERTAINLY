# coding: utf-8

"""
    CZERTAINLY Core API

    REST API for CZERTAINLY Core

    The version of the OpenAPI document: 2.13.2-SNAPSHOT
    Contact: info@czertainly.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class PlatformEnum(str, Enum):
    """
    Platform enum of the field values
    """

    """
    allowed enum values
    """
    RESOURCE = 'Resource'
    FILTERCONDITIONOPERATOR = 'FilterConditionOperator'
    FILTERFIELDTYPE = 'FilterFieldType'
    FILTERFIELDSOURCE = 'FilterFieldSource'
    SETTINGSSECTION = 'SettingsSection'
    NOTIFICATIONTYPE = 'NotificationType'
    AUTHTYPE = 'AuthType'
    HEALTHSTATUS = 'HealthStatus'
    CONNECTORSTATUS = 'ConnectorStatus'
    FUNCTIONGROUPCODE = 'FunctionGroupCode'
    CERTIFICATETYPE = 'CertificateType'
    CERTIFICATESTATE = 'CertificateState'
    CERTIFICATEVALIDATIONSTATUS = 'CertificateValidationStatus'
    CERTIFICATEFORMAT = 'CertificateFormat'
    CERTIFICATEFORMATENCODING = 'CertificateFormatEncoding'
    CERTIFICATEVALIDATIONCHECK = 'CertificateValidationCheck'
    CERTIFICATEREVOCATIONREASON = 'CertificateRevocationReason'
    CERTIFICATEREQUESTFORMAT = 'CertificateRequestFormat'
    DISCOVERYSTATUS = 'DiscoveryStatus'
    CERTIFICATEPROTOCOL = 'CertificateProtocol'
    CERTIFICATESUBJECTTYPE = 'CertificateSubjectType'
    KEYALGORITHM = 'KeyAlgorithm'
    KEYFORMAT = 'KeyFormat'
    KEYSTATE = 'KeyState'
    KEYTYPE = 'KeyType'
    KEYUSAGE = 'KeyUsage'
    KEYREQUESTTYPE = 'KeyRequestType'
    KEYCOMPROMISEREASON = 'KeyCompromiseReason'
    TOKENINSTANCESTATUS = 'TokenInstanceStatus'
    DIGESTALGORITHM = 'DigestAlgorithm'
    RSASIGNATURESCHEME = 'RsaSignatureScheme'
    RSAENCRYPTIONSCHEME = 'RsaEncryptionScheme'
    COMPLIANCESTATUS = 'ComplianceStatus'
    COMPLIANCERULESTATUS = 'ComplianceRuleStatus'
    ACCOUNTSTATUS = 'AccountStatus'
    PROTECTIONMETHOD = 'ProtectionMethod'
    CMPPROFILEVARIANT = 'CmpProfileVariant'
    ATTRIBUTETYPE = 'AttributeType'
    ATTRIBUTECONTENTTYPE = 'AttributeContentType'
    ATTRIBUTECONSTRAINTTYPE = 'AttributeConstraintType'
    ATTRIBUTEVALUETARGET = 'AttributeValueTarget'
    PROGRAMMINGLANGUAGEENUM = 'ProgrammingLanguageEnum'
    SCHEDULERJOBEXECUTIONSTATUS = 'SchedulerJobExecutionStatus'
    TRIGGERTYPE = 'TriggerType'
    CONDITIONTYPE = 'ConditionType'
    EXECUTIONTYPE = 'ExecutionType'
    RESOURCEEVENT = 'ResourceEvent'
    MODULE = 'Module'
    ACTORTYPE = 'ActorType'
    AUTHMETHOD = 'AuthMethod'
    OPERATION = 'Operation'
    OPERATIONRESULT = 'OperationResult'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of PlatformEnum from a JSON string"""
        return cls(json.loads(json_str))


